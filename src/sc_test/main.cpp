/* Постановки задачи
		Необходимо на языке моделирования SystemC версии не ниже 2.3 разработать простую имитационную модель сети.

   Пояснения
	Сеть состоит из блоков. Каждый блок представляет собой отдельный класс, имеющий заголовочный файл *.h и файл с реализацией *.cpp.
	Между блоками сети передаются пакеты. Передача пакетов происходит побайтно, исходя из заданной скорости.
	Все пакеты завершаются передачей специального байта (его значение 255), означающего конец передачи пакета.
	Этот байт называется Признак конца пакета (англ. End of Packet, EOP).

	Взаимодействие между блоками сети осуществляется при помощи портов и интерфейсов (sc_port и sc_interface).
	До запуска моделирования в файле main.cpp создается модель сети NetworkUnit. Этот блок содержит внутри себя все остальные блоки.
	При запуске моделирования (для этого используется функция sc_start (длительность_моделирования, единицы_времени))
	блок GenUnit запускается первым из всех блоков сети (в 0 наносекунду) и выполняет те действия, которые были описаны выше. GenUnit работает с периодичностью в 2 микросекунды. Остальные блоки начинают функционировать при получении пакета от предыдущего блока. Передача пакета считается завершенной при получении специального байта, означающего конец передачи пакета (EOP).
	Для определения значения конкретного бита в типе данных sc_int следует использовать только функции, определенные в этом типе данных.
	Каждый блок должен выводить на экран информацию о всех происходящих в нем действиях в следующем формате:
	модельное_время имя_блока описание_выполненного_действия
	Модельное время должно быть указано с единицей измерения. Например: 100 ns, где ns - наносекунда.

   @version 1.0
   @date 25.12.2017
   @authors Кузнецов Дмитрий
*/

#include <Windows.h>
#include "systemc.h"

#include "NetworkUnit.h"



int sc_main(int argc, char* argv[]) {
	int time = 50;
	cout << "Network Unit initialize" << endl;
	cout << "____________________________________________________________________________________" << endl;
	NetworkUnit network("TEST");
	cout << "Start simulation with time" <<time<<" NS"<< endl;
	cout << "____________________________________________________________________________________" << endl;
	sc_start(time, SC_NS);
	cout << "____________________________________________________________________________________" << endl;
	cout << "Simulation end" << endl;
	system("pause");
	return(0);
}
